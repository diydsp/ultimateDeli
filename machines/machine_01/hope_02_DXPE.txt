('Using ratio_select ', '0')
('Using ticker', 'DXPE')
../../cutting_board/ticker_data/ticker_data_DXPE.csv
../../cutting_board/features/ticker_data_DXPE_.csv
<type 'list'>
4653
<type 'list'>
8
<type 'float'>
4.0
<type 'numpy.ndarray'>
4653
(4653, 8)
[[  4.     4.25   4.   ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 ..., 
 [ 21.    21.49  20.57 ...,  22.56  20.65  22.36]
 [ 20.65  22.56  20.65 ...,  24.68  22.55  24.5 ]
 [ 22.55  24.68  22.55 ...,  25.4   24.    25.31]]
('Using ratio_select ', 0)
1.00800256082
0.993117010816
[[ 0.  1.  0.]
 [ 0.  1.  0.]
 [ 0.  0.  1.]
 ..., 
 [ 0.  1.  0.]
 [ 0.  1.  0.]
 [ 1.  0.  0.]]
[ 1548.  1550.  1554.]
Using num_iterations 10
Using internal_nums 20
loading data...
shapes
(4652, 8)
(4652, 3)
X_train.shape
(4187, 8)
y_train.shape
(4187, 3)
X_train.shape[1]
8
Build model...

--------------------------------------------------
Iteration 1
465/465 [==============================] - 0s
score is 0.216801509261
ratio:  0.444444444444
[[  0.   0.  35.]
 [  0.   1.  21.]
 [  0.   0.  43.]]

--------------------------------------------------
Iteration 2
465/465 [==============================] - 0s
score is 0.212798625231
ratio:  0.454545454545
[[  2.   2.  33.]
 [  2.   4.  17.]
 [  1.   0.  39.]]

--------------------------------------------------
Iteration 3
465/465 [==============================] - 0s
score is 0.214996919036
ratio:  0.444444444444
[[  1.   2.  33.]
 [  1.   2.  19.]
 [  1.   0.  41.]]

--------------------------------------------------
Iteration 4
465/465 [==============================] - 0s
score is 0.210243239999
ratio:  0.333333333333
[[  3.   7.  37.]
 [  5.   6.  14.]
 [  3.   1.  24.]]

--------------------------------------------------
Iteration 5
465/465 [==============================] - 0s
score is 0.208427220583
ratio:  0.505050505051
[[ 12.   9.  26.]
 [  7.   6.   7.]
 [  1.   0.  32.]]

--------------------------------------------------
Iteration 6
465/465 [==============================] - 0s
score is 0.206140235066
ratio:  0.464646464646
[[ 12.  16.  16.]
 [  6.  11.   4.]
 [  7.   5.  23.]]

--------------------------------------------------
Iteration 7
465/465 [==============================] - 0s
score is 0.204625606537
ratio:  0.414141414141
[[ 15.   3.  23.]
 [  9.   3.  15.]
 [  9.   0.  23.]]

--------------------------------------------------
Iteration 8
465/465 [==============================] - 0s
score is 0.193991065025
ratio:  0.585858585859
[[ 32.   3.   7.]
 [ 16.   3.   7.]
 [  9.   0.  23.]]

--------------------------------------------------
Iteration 9
465/465 [==============================] - 0s
score is 0.174846589565
ratio:  0.606060606061
[[ 30.   0.   8.]
 [ 13.   0.   9.]
 [ 10.   0.  30.]]

--------------------------------------------------
Iteration 10
465/465 [==============================] - 0s
score is 0.165262043476
ratio:  0.616161616162
[[ 35.   0.  10.]
 [ 10.   0.  14.]
 [  5.   0.  26.]]
('Using ratio_select ', '1')
('Using ticker', 'DXPE')
../../cutting_board/ticker_data/ticker_data_DXPE.csv
../../cutting_board/features/ticker_data_DXPE_.csv
<type 'list'>
4653
<type 'list'>
8
<type 'float'>
4.0
<type 'numpy.ndarray'>
4653
(4653, 8)
[[  4.     4.25   4.   ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 ..., 
 [ 21.    21.49  20.57 ...,  22.56  20.65  22.36]
 [ 20.65  22.56  20.65 ...,  24.68  22.55  24.5 ]
 [ 22.55  24.68  22.55 ...,  25.4   24.    25.31]]
('Using ratio_select ', 1)
0.998452012384
0.978237214363
[[ 0.  0.  1.]
 [ 0.  0.  1.]
 [ 0.  0.  1.]
 ..., 
 [ 0.  0.  1.]
 [ 0.  0.  1.]
 [ 1.  0.  0.]]
[ 1548.  1550.  1554.]
Using num_iterations 10
Using internal_nums 20
loading data...
shapes
(4652, 8)
(4652, 3)
X_train.shape
(4187, 8)
y_train.shape
(4187, 3)
X_train.shape[1]
8
Build model...

--------------------------------------------------
Iteration 1
465/465 [==============================] - 0s
score is 0.19023540616
ratio:  0.575757575758
[[ 48.   0.   0.]
 [ 35.   9.   1.]
 [  7.   0.   0.]]

--------------------------------------------------
Iteration 2
465/465 [==============================] - 0s
score is 0.185898348689
ratio:  0.585858585859
[[ 51.   1.   0.]
 [ 34.   7.   0.]
 [  5.   2.   0.]]

--------------------------------------------------
Iteration 3
465/465 [==============================] - 0s
score is 0.156340762973
ratio:  0.656565656566
[[ 32.   6.   0.]
 [  9.  31.   4.]
 [  2.  14.   2.]]

--------------------------------------------------
Iteration 4
465/465 [==============================] - 0s
score is 0.145861074328
ratio:  0.69696969697
[[ 34.  11.   0.]
 [ 11.  35.   0.]
 [  5.   4.   0.]]

--------------------------------------------------
Iteration 5
465/465 [==============================] - 0s
score is 0.138907432556
ratio:  0.707070707071
[[ 32.  18.   0.]
 [  4.  38.   1.]
 [  0.   7.   0.]]

--------------------------------------------------
Iteration 6
465/465 [==============================] - 0s
score is 0.133702844381
ratio:  0.707070707071
[[ 39.   8.   0.]
 [  7.  31.   2.]
 [  2.  11.   0.]]

--------------------------------------------------
Iteration 7
465/465 [==============================] - 0s
score is 0.135270029306
ratio:  0.575757575758
[[ 23.  20.   0.]
 [  9.  34.   0.]
 [  0.  14.   0.]]

--------------------------------------------------
Iteration 8
465/465 [==============================] - 0s
score is 0.12412571907
ratio:  0.737373737374
[[ 35.   9.   0.]
 [  4.  38.   0.]
 [  1.  13.   0.]]

--------------------------------------------------
Iteration 9
465/465 [==============================] - 0s
score is 0.119699083269
ratio:  0.727272727273
[[ 34.   7.   0.]
 [  8.  38.   0.]
 [  2.  11.   0.]]

--------------------------------------------------
Iteration 10
465/465 [==============================] - 0s
score is 0.126489251852
ratio:  0.707070707071
[[ 27.  12.   0.]
 [  6.  42.   1.]
 [  3.   8.   1.]]
('Using ratio_select ', '2')
('Using ticker', 'DXPE')
../../cutting_board/ticker_data/ticker_data_DXPE.csv
../../cutting_board/features/ticker_data_DXPE_.csv
<type 'list'>
4653
<type 'list'>
8
<type 'float'>
4.0
<type 'numpy.ndarray'>
4653
(4653, 8)
[[  4.     4.25   4.   ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 ..., 
 [ 21.    21.49  20.57 ...,  22.56  20.65  22.36]
 [ 20.65  22.56  20.65 ...,  24.68  22.55  24.5 ]
 [ 22.55  24.68  22.55 ...,  25.4   24.    25.31]]
('Using ratio_select ', 2)
1.02542372881
1.00313479624
[[ 1.  0.  0.]
 [ 1.  0.  0.]
 [ 0.  0.  1.]
 ..., 
 [ 1.  0.  0.]
 [ 1.  0.  0.]
 [ 1.  0.  0.]]
[ 1548.  1550.  1554.]
Using num_iterations 10
Using internal_nums 20
loading data...
shapes
(4652, 8)
(4652, 3)
X_train.shape
(4187, 8)
y_train.shape
(4187, 3)
X_train.shape[1]
8
Build model...

--------------------------------------------------
Iteration 1
465/465 [==============================] - 0s
score is 0.20476038754
ratio:  0.464646464646
[[  0.  17.   0.]
 [  0.  46.   0.]
 [  0.  37.   0.]]

--------------------------------------------------
Iteration 2
465/465 [==============================] - 0s
score is 0.205974772573
ratio:  0.505050505051
[[  0.  14.   0.]
 [  1.  50.   0.]
 [  0.  35.   0.]]

--------------------------------------------------
Iteration 3
465/465 [==============================] - 0s
score is 0.206114143133
ratio:  0.484848484848
[[  0.  15.   0.]
 [  0.  48.   0.]
 [  0.  37.   0.]]

--------------------------------------------------
Iteration 4
465/465 [==============================] - 0s
score is 0.20552380383
ratio:  0.454545454545
[[  0.  12.   0.]
 [  0.  45.   0.]
 [  0.  43.   0.]]

--------------------------------------------------
Iteration 5
465/465 [==============================] - 0s
score is 0.205535277724
ratio:  0.494949494949
[[  0.  16.   0.]
 [  0.  49.   0.]
 [  0.  35.   0.]]

--------------------------------------------------
Iteration 6
465/465 [==============================] - 0s
score is 0.205537378788
ratio:  0.454545454545
[[  0.  14.   0.]
 [  0.  45.   0.]
 [  0.  41.   0.]]

--------------------------------------------------
Iteration 7
465/465 [==============================] - 0s
score is 0.20563878119
ratio:  0.464646464646
[[  0.  15.   0.]
 [  0.  46.   0.]
 [  0.  39.   0.]]

--------------------------------------------------
Iteration 8
465/465 [==============================] - 0s
score is 0.205849140882
ratio:  0.494949494949
[[  0.  23.   0.]
 [  0.  49.   0.]
 [  0.  28.   0.]]

--------------------------------------------------
Iteration 9
465/465 [==============================] - 0s
score is 0.205706104636
ratio:  0.434343434343
[[  0.  19.   0.]
 [  0.  43.   0.]
 [  0.  38.   0.]]

--------------------------------------------------
Iteration 10
465/465 [==============================] - 0s
score is 0.205673530698
ratio:  0.585858585859
[[  0.  15.   0.]
 [  0.  58.   1.]
 [  0.  26.   0.]]
('Using ratio_select ', '3')
('Using ticker', 'DXPE')
../../cutting_board/ticker_data/ticker_data_DXPE.csv
../../cutting_board/features/ticker_data_DXPE_.csv
<type 'list'>
4653
<type 'list'>
8
<type 'float'>
4.0
<type 'numpy.ndarray'>
4653
(4653, 8)
[[  4.     4.25   4.   ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 ..., 
 [ 21.    21.49  20.57 ...,  22.56  20.65  22.36]
 [ 20.65  22.56  20.65 ...,  24.68  22.55  24.5 ]
 [ 22.55  24.68  22.55 ...,  25.4   24.    25.31]]
('Using ratio_select ', 3)
1.0027100271
0.999037536092
[[ 0.  1.  0.]
 [ 0.  1.  0.]
 [ 0.  0.  1.]
 ..., 
 [ 0.  1.  0.]
 [ 0.  1.  0.]
 [ 1.  0.  0.]]
[ 1548.  1550.  1554.]
Using num_iterations 10
Using internal_nums 20
loading data...
shapes
(4652, 8)
(4652, 3)
X_train.shape
(4187, 8)
y_train.shape
(4187, 3)
X_train.shape[1]
8
Build model...

--------------------------------------------------
Iteration 1
465/465 [==============================] - 0s
score is 0.215401962399
ratio:  0.373737373737
[[  0.   0.  48.]
 [  0.   0.  15.]
 [  0.   0.  37.]]

--------------------------------------------------
Iteration 2
465/465 [==============================] - 0s
score is 0.215745344758
ratio:  0.30303030303
[[  0.   0.  50.]
 [  0.   0.  20.]
 [  0.   0.  30.]]

--------------------------------------------------
Iteration 3
465/465 [==============================] - 0s
score is 0.215609446168
ratio:  0.313131313131
[[  0.   1.  49.]
 [  0.   0.  19.]
 [  0.   0.  31.]]

--------------------------------------------------
Iteration 4
465/465 [==============================] - 0s
score is 0.214389115572
ratio:  0.313131313131
[[  0.   0.  44.]
 [  0.   0.  25.]
 [  0.   0.  31.]]

--------------------------------------------------
Iteration 5
465/465 [==============================] - 0s
score is 0.214580431581
ratio:  0.373737373737
[[  0.   0.  50.]
 [  0.   0.  13.]
 [  0.   0.  37.]]

--------------------------------------------------
Iteration 6
465/465 [==============================] - 0s
score is 0.215306192636
ratio:  0.343434343434
[[  0.   1.  49.]
 [  0.   0.  16.]
 [  0.   0.  34.]]

--------------------------------------------------
Iteration 7
465/465 [==============================] - 0s
score is 0.214566111565
ratio:  0.383838383838
[[  0.   0.  43.]
 [  0.   0.  19.]
 [  0.   0.  38.]]

--------------------------------------------------
Iteration 8
465/465 [==============================] - 0s
score is 0.214566066861
ratio:  0.353535353535
[[  0.   0.  52.]
 [  0.   0.  13.]
 [  0.   0.  35.]]

--------------------------------------------------
Iteration 9
465/465 [==============================] - 0s
score is 0.214417010546
ratio:  0.363636363636
[[  0.   0.  49.]
 [  0.   0.  15.]
 [  0.   0.  36.]]

--------------------------------------------------
Iteration 10
465/465 [==============================] - 0s
score is 0.214407846332
ratio:  0.313131313131
[[  0.   0.  48.]
 [  0.   0.  21.]
 [  0.   0.  31.]]
('Using ratio_select ', '4')
('Using ticker', 'DXPE')
../../cutting_board/ticker_data/ticker_data_DXPE.csv
../../cutting_board/features/ticker_data_DXPE_.csv
<type 'list'>
4653
<type 'list'>
8
<type 'float'>
4.0
<type 'numpy.ndarray'>
4653
(4653, 8)
[[  4.     4.25   4.   ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 ..., 
 [ 21.    21.49  20.57 ...,  22.56  20.65  22.36]
 [ 20.65  22.56  20.65 ...,  24.68  22.55  24.5 ]
 [ 22.55  24.68  22.55 ...,  25.4   24.    25.31]]
('Using ratio_select ', 4)
1.02725366876
1.0
[[ 0.  1.  0.]
 [ 0.  1.  0.]
 [ 0.  0.  1.]
 ..., 
 [ 0.  1.  0.]
 [ 0.  1.  0.]
 [ 1.  0.  0.]]
[ 1117.  1981.  1554.]
Using num_iterations 10
Using internal_nums 20
loading data...
shapes
(4652, 8)
(4652, 3)
X_train.shape
(4187, 8)
y_train.shape
(4187, 3)
X_train.shape[1]
8
Build model...

--------------------------------------------------
Iteration 1
465/465 [==============================] - 0s
score is 0.210539743304
ratio:  0.424242424242
[[  0.   4.  14.]
 [  0.  14.  24.]
 [  0.  16.  28.]]

--------------------------------------------------
Iteration 2
465/465 [==============================] - 0s
score is 0.210755437613
ratio:  0.535353535354
[[  0.   2.  20.]
 [  0.  19.  16.]
 [  0.   9.  34.]]

--------------------------------------------------
Iteration 3
465/465 [==============================] - 0s
score is 0.210267186165
ratio:  0.424242424242
[[  0.   8.  22.]
 [  0.  16.  16.]
 [  0.  12.  26.]]

--------------------------------------------------
Iteration 4
465/465 [==============================] - 0s
score is 0.211834385991
ratio:  0.454545454545
[[  0.   4.  21.]
 [  0.   6.  22.]
 [  0.   8.  39.]]

--------------------------------------------------
Iteration 5
465/465 [==============================] - 0s
score is 0.210698768497
ratio:  0.505050505051
[[  0.   3.  23.]
 [  0.  14.  18.]
 [  0.   6.  36.]]

--------------------------------------------------
Iteration 6
465/465 [==============================] - 0s
score is 0.209039583802
ratio:  0.40404040404
[[  0.   2.  24.]
 [  0.  13.  27.]
 [  0.   7.  27.]]

--------------------------------------------------
Iteration 7
465/465 [==============================] - 0s
score is 0.20863814652
ratio:  0.464646464646
[[  0.   4.  18.]
 [  0.  11.  27.]
 [  0.   5.  35.]]

--------------------------------------------------
Iteration 8
465/465 [==============================] - 0s
score is 0.206189706922
ratio:  0.545454545455
[[  0.   5.  19.]
 [  0.  17.  18.]
 [  0.   4.  37.]]

--------------------------------------------------
Iteration 9
465/465 [==============================] - 0s
score is 0.202180579305
ratio:  0.464646464646
[[  0.  12.  16.]
 [  0.  20.  16.]
 [  0.  10.  26.]]

--------------------------------------------------
Iteration 10
465/465 [==============================] - 0s
score is 0.197564125061
ratio:  0.525252525253
[[  0.  10.  13.]
 [  0.  20.  15.]
 [  0.  10.  32.]]
('Using ratio_select ', '5')
('Using ticker', 'DXPE')
../../cutting_board/ticker_data/ticker_data_DXPE.csv
../../cutting_board/features/ticker_data_DXPE_.csv
<type 'list'>
4653
<type 'list'>
8
<type 'float'>
4.0
<type 'numpy.ndarray'>
4653
(4653, 8)
[[  4.     4.25   4.   ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 ..., 
 [ 21.    21.49  20.57 ...,  22.56  20.65  22.36]
 [ 20.65  22.56  20.65 ...,  24.68  22.55  24.5 ]
 [ 22.55  24.68  22.55 ...,  25.4   24.    25.31]]
('Using ratio_select ', 5)
1.004784689
0.994080779944
[[ 0.  1.  0.]
 [ 0.  1.  0.]
 [ 0.  0.  1.]
 ..., 
 [ 0.  1.  0.]
 [ 0.  1.  0.]
 [ 1.  0.  0.]]
[ 1548.  1550.  1554.]
Using num_iterations 10
Using internal_nums 20
loading data...
shapes
(4652, 8)
(4652, 3)
X_train.shape
(4187, 8)
y_train.shape
(4187, 3)
X_train.shape[1]
8
Build model...

--------------------------------------------------
Iteration 1
465/465 [==============================] - 0s
score is 0.216619312763
ratio:  0.323232323232
[[  0.   0.  48.]
 [  0.   0.  20.]
 [  0.   0.  32.]]

--------------------------------------------------
Iteration 2
465/465 [==============================] - 0s
score is 0.216098487377
ratio:  0.333333333333
[[  0.   0.  43.]
 [  0.   0.  24.]
 [  0.   0.  33.]]

--------------------------------------------------
Iteration 3
465/465 [==============================] - 0s
score is 0.215434134007
ratio:  0.393939393939
[[  0.   0.  46.]
 [  0.   0.  15.]
 [  0.   0.  39.]]

--------------------------------------------------
Iteration 4
465/465 [==============================] - 0s
score is 0.214701935649
ratio:  0.373737373737
[[  0.   0.  50.]
 [  0.   0.  13.]
 [  0.   0.  37.]]

--------------------------------------------------
Iteration 5
465/465 [==============================] - 0s
score is 0.214056745172
ratio:  0.454545454545
[[ 37.   0.   3.]
 [ 20.   0.   0.]
 [ 32.   0.   8.]]

--------------------------------------------------
Iteration 6
465/465 [==============================] - 0s
score is 0.214127659798
ratio:  0.424242424242
[[ 42.   0.   2.]
 [ 21.   0.   0.]
 [ 35.   0.   0.]]

--------------------------------------------------
Iteration 7
465/465 [==============================] - 0s
score is 0.212130993605
ratio:  0.474747474747
[[ 40.   2.   0.]
 [ 14.   2.   4.]
 [ 32.   1.   5.]]

--------------------------------------------------
Iteration 8
465/465 [==============================] - 0s
score is 0.208648383617
ratio:  0.484848484848
[[ 37.   1.   5.]
 [ 12.   0.   3.]
 [ 29.   2.  11.]]

--------------------------------------------------
Iteration 9
465/465 [==============================] - 0s
score is 0.205488532782
ratio:  0.515151515152
[[ 28.   0.  12.]
 [ 13.   0.   5.]
 [ 19.   0.  23.]]

--------------------------------------------------
Iteration 10
465/465 [==============================] - 0s
score is 0.202884748578
ratio:  0.636363636364
[[ 33.   0.  14.]
 [  8.   0.   7.]
 [  8.   0.  30.]]
('Using ratio_select ', '6')
('Using ticker', 'DXPE')
../../cutting_board/ticker_data/ticker_data_DXPE.csv
../../cutting_board/features/ticker_data_DXPE_.csv
<type 'list'>
4653
<type 'list'>
8
<type 'float'>
4.0
<type 'numpy.ndarray'>
4653
(4653, 8)
[[  4.     4.25   4.   ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 ..., 
 [ 21.    21.49  20.57 ...,  22.56  20.65  22.36]
 [ 20.65  22.56  20.65 ...,  24.68  22.55  24.5 ]
 [ 22.55  24.68  22.55 ...,  25.4   24.    25.31]]
('Using ratio_select ', 6)
1.04895700298
1.01713180437
[[ 1.  0.  0.]
 [ 1.  0.  0.]
 [ 0.  0.  1.]
 ..., 
 [ 1.  0.  0.]
 [ 1.  0.  0.]
 [ 1.  0.  0.]]
[ 1548.  1550.  1554.]
Using num_iterations 10
Using internal_nums 20
loading data...
shapes
(4652, 8)
(4652, 3)
X_train.shape
(4187, 8)
y_train.shape
(4187, 3)
X_train.shape[1]
8
Build model...

--------------------------------------------------
Iteration 1
465/465 [==============================] - 0s
score is 0.203797206283
ratio:  0.454545454545
[[  0.  10.   0.]
 [  0.  45.   0.]
 [  0.  45.   0.]]

--------------------------------------------------
Iteration 2
465/465 [==============================] - 0s
score is 0.200036138296
ratio:  0.373737373737
[[  1.   8.   4.]
 [  4.  35.   6.]
 [  0.  41.   1.]]

--------------------------------------------------
Iteration 3
465/465 [==============================] - 0s
score is 0.200806573033
ratio:  0.40404040404
[[  3.   1.  13.]
 [  0.   2.  46.]
 [  0.   0.  35.]]

--------------------------------------------------
Iteration 4
465/465 [==============================] - 0s
score is 0.201727479696
ratio:  0.393939393939
[[  1.   0.  19.]
 [  0.   0.  42.]
 [  0.   0.  38.]]

--------------------------------------------------
Iteration 5
465/465 [==============================] - 0s
score is 0.200737759471
ratio:  0.383838383838
[[  0.   1.  10.]
 [  0.   1.  51.]
 [  0.   0.  37.]]

--------------------------------------------------
Iteration 6
465/465 [==============================] - 0s
score is 0.201418623328
ratio:  0.393939393939
[[  0.   1.  13.]
 [  0.   1.  47.]
 [  0.   0.  38.]]

--------------------------------------------------
Iteration 7
465/465 [==============================] - 0s
score is 0.196665301919
ratio:  0.515151515152
[[  5.   4.   6.]
 [  4.  10.  31.]
 [  0.   4.  36.]]

--------------------------------------------------
Iteration 8
465/465 [==============================] - 0s
score is 0.170985251665
ratio:  0.585858585859
[[  0.   9.   3.]
 [  0.  32.  12.]
 [  0.  18.  26.]]

--------------------------------------------------
Iteration 9
465/465 [==============================] - 0s
score is 0.168322741985
ratio:  0.585858585859
[[  0.  11.   3.]
 [  0.  33.   9.]
 [  0.  19.  25.]]

--------------------------------------------------
Iteration 10
465/465 [==============================] - 0s
score is 0.168039947748
ratio:  0.646464646465
[[  0.  12.   2.]
 [  0.  43.  10.]
 [  0.  12.  21.]]
('Using ratio_select ', '7')
('Using ticker', 'DXPE')
../../cutting_board/ticker_data/ticker_data_DXPE.csv
../../cutting_board/features/ticker_data_DXPE_.csv
<type 'list'>
4653
<type 'list'>
8
<type 'float'>
4.0
<type 'numpy.ndarray'>
4653
(4653, 8)
[[  4.     4.25   4.   ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 ..., 
 [ 21.    21.49  20.57 ...,  22.56  20.65  22.36]
 [ 20.65  22.56  20.65 ...,  24.68  22.55  24.5 ]
 [ 22.55  24.68  22.55 ...,  25.4   24.    25.31]]
('Using ratio_select ', 7)
1.02376364804
1.00204828091
[[ 1.  0.  0.]
 [ 1.  0.  0.]
 [ 0.  0.  1.]
 ..., 
 [ 1.  0.  0.]
 [ 1.  0.  0.]
 [ 1.  0.  0.]]
[ 1548.  1550.  1554.]
Using num_iterations 10
Using internal_nums 20
loading data...
shapes
(4652, 8)
(4652, 3)
X_train.shape
(4187, 8)
y_train.shape
(4187, 3)
X_train.shape[1]
8
Build model...

--------------------------------------------------
Iteration 1
465/465 [==============================] - 0s
score is 0.206686988473
ratio:  0.464646464646
[[  0.  12.   0.]
 [  0.  46.   0.]
 [  0.  42.   0.]]

--------------------------------------------------
Iteration 2
465/465 [==============================] - 0s
score is 0.206849128008
ratio:  0.454545454545
[[  0.  11.   0.]
 [  0.  45.   0.]
 [  0.  44.   0.]]

--------------------------------------------------
Iteration 3
465/465 [==============================] - 0s
score is 0.206699758768
ratio:  0.454545454545
[[  0.  12.   0.]
 [  0.  45.   0.]
 [  0.  43.   0.]]

--------------------------------------------------
Iteration 4
465/465 [==============================] - 0s
score is 0.206352010369
ratio:  0.434343434343
[[  0.  19.   0.]
 [  0.  43.   0.]
 [  0.  38.   0.]]

--------------------------------------------------
Iteration 5
465/465 [==============================] - 0s
score is 0.206301867962
ratio:  0.484848484848
[[  0.  17.   0.]
 [  0.  48.   0.]
 [  0.  35.   0.]]

--------------------------------------------------
Iteration 6
465/465 [==============================] - 0s
score is 0.206328764558
ratio:  0.414141414141
[[  0.  12.   0.]
 [  0.  41.   0.]
 [  0.  47.   0.]]

--------------------------------------------------
Iteration 7
465/465 [==============================] - 0s
score is 0.206327527761
ratio:  0.40404040404
[[  0.  19.   0.]
 [  0.  40.   0.]
 [  0.  41.   0.]]

--------------------------------------------------
Iteration 8
465/465 [==============================] - 0s
score is 0.206357225776
ratio:  0.373737373737
[[  0.  14.   0.]
 [  0.  37.   0.]
 [  0.  49.   0.]]

--------------------------------------------------
Iteration 9
465/465 [==============================] - 0s
score is 0.206382840872
ratio:  0.424242424242
[[  0.  16.   0.]
 [  0.  42.   0.]
 [  0.  42.   0.]]

--------------------------------------------------
Iteration 10
465/465 [==============================] - 0s
score is 0.206403523684
ratio:  0.40404040404
[[  0.  23.   0.]
 [  0.  40.   0.]
 [  0.  37.   0.]]
('Using ratio_select ', '8')
('Using ticker', 'DXPE')
../../cutting_board/ticker_data/ticker_data_DXPE.csv
../../cutting_board/features/ticker_data_DXPE_.csv
<type 'list'>
4653
<type 'list'>
8
<type 'float'>
4.0
<type 'numpy.ndarray'>
4653
(4653, 8)
[[  4.     4.25   4.   ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 ..., 
 [ 21.    21.49  20.57 ...,  22.56  20.65  22.36]
 [ 20.65  22.56  20.65 ...,  24.68  22.55  24.5 ]
 [ 22.55  24.68  22.55 ...,  25.4   24.    25.31]]
('Using ratio_select ', 8)
1.0
0.971563981043
[[ 0.  1.  0.]
 [ 0.  1.  0.]
 [ 0.  0.  1.]
 ..., 
 [ 0.  1.  0.]
 [ 0.  1.  0.]
 [ 1.  0.  0.]]
[ 1548.  1995.  1109.]
Using num_iterations 10
Using internal_nums 20
loading data...
shapes
(4652, 8)
(4652, 3)
X_train.shape
(4187, 8)
y_train.shape
(4187, 3)
X_train.shape[1]
8
Build model...

--------------------------------------------------
Iteration 1
465/465 [==============================] - 0s
score is 0.219837099314
ratio:  0.373737373737
[[  0.  40.   0.]
 [  0.  37.   0.]
 [  0.  23.   0.]]

--------------------------------------------------
Iteration 2
465/465 [==============================] - 0s
score is 0.221014171839
ratio:  0.363636363636
[[ 10.  25.  11.]
 [ 10.  10.   7.]
 [  4.   7.  16.]]

--------------------------------------------------
Iteration 3
465/465 [==============================] - 0s
score is 0.219705820084
ratio:  0.434343434343
[[ 29.  14.   0.]
 [ 16.  14.   0.]
 [ 22.   5.   0.]]

--------------------------------------------------
Iteration 4
465/465 [==============================] - 0s
score is 0.216212615371
ratio:  0.444444444444
[[ 33.   7.   0.]
 [ 23.  11.   0.]
 [ 23.   3.   0.]]

--------------------------------------------------
Iteration 5
465/465 [==============================] - 0s
score is 0.215652912855
ratio:  0.505050505051
[[ 43.   4.   0.]
 [ 23.   7.   0.]
 [ 20.   3.   0.]]

--------------------------------------------------
Iteration 6
465/465 [==============================] - 0s
score is 0.224533215165
ratio:  0.30303030303
[[ 19.  26.   0.]
 [ 14.  11.   0.]
 [ 21.   9.   0.]]

--------------------------------------------------
Iteration 7
465/465 [==============================] - 0s
score is 0.226567745209
ratio:  0.393939393939
[[ 25.  18.   0.]
 [ 12.  14.   0.]
 [ 19.  12.   0.]]

--------------------------------------------------
Iteration 8
465/465 [==============================] - 0s
score is 0.215952709317
ratio:  0.505050505051
[[ 43.   6.   0.]
 [ 23.   7.   0.]
 [ 19.   2.   0.]]

--------------------------------------------------
Iteration 9
465/465 [==============================] - 0s
score is 0.215482011437
ratio:  0.464646464646
[[ 35.  10.   0.]
 [ 23.  11.   0.]
 [ 14.   7.   0.]]

--------------------------------------------------
Iteration 10
465/465 [==============================] - 0s
score is 0.21605309844
ratio:  0.454545454545
[[ 33.   7.   0.]
 [ 19.  12.   0.]
 [ 24.   5.   0.]]
('Using ratio_select ', '9')
('Using ticker', 'DXPE')
../../cutting_board/ticker_data/ticker_data_DXPE.csv
../../cutting_board/features/ticker_data_DXPE_.csv
<type 'list'>
4653
<type 'list'>
8
<type 'float'>
4.0
<type 'numpy.ndarray'>
4653
(4653, 8)
[[  4.     4.25   4.   ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 ..., 
 [ 21.    21.49  20.57 ...,  22.56  20.65  22.36]
 [ 20.65  22.56  20.65 ...,  24.68  22.55  24.5 ]
 [ 22.55  24.68  22.55 ...,  25.4   24.    25.31]]
('Using ratio_select ', 9)
0.985090521832
0.953725961538
[[ 0.  0.  1.]
 [ 0.  0.  1.]
 [ 0.  0.  1.]
 ..., 
 [ 0.  0.  1.]
 [ 0.  0.  1.]
 [ 1.  0.  0.]]
[ 1548.  1550.  1554.]
Using num_iterations 10
Using internal_nums 20
loading data...
shapes
(4652, 8)
(4652, 3)
X_train.shape
(4187, 8)
y_train.shape
(4187, 3)
X_train.shape[1]
8
Build model...

--------------------------------------------------
Iteration 1
465/465 [==============================] - 0s
score is 0.210317805409
ratio:  0.484848484848
[[  0.  32.   4.]
 [  0.  48.   0.]
 [  0.  16.   0.]]

--------------------------------------------------
Iteration 2
465/465 [==============================] - 0s
score is 0.207629591227
ratio:  0.454545454545
[[  1.  42.   0.]
 [  0.  44.   0.]
 [  0.  13.   0.]]

--------------------------------------------------
Iteration 3
465/465 [==============================] - 0s
score is 0.20737080276
ratio:  0.424242424242
[[  0.  38.   0.]
 [  0.  42.   0.]
 [  0.  20.   0.]]

--------------------------------------------------
Iteration 4
465/465 [==============================] - 0s
score is 0.207256957889
ratio:  0.424242424242
[[  0.  46.   0.]
 [  0.  42.   0.]
 [  0.  12.   0.]]

--------------------------------------------------
Iteration 5
465/465 [==============================] - 0s
score is 0.207097113132
ratio:  0.494949494949
[[  0.  41.   0.]
 [  0.  49.   0.]
 [  0.  10.   0.]]

--------------------------------------------------
Iteration 6
465/465 [==============================] - 0s
score is 0.206583887339
ratio:  0.464646464646
[[  0.  38.   0.]
 [  0.  46.   0.]
 [  0.  16.   0.]]

--------------------------------------------------
Iteration 7
465/465 [==============================] - 0s
score is 0.20350009203
ratio:  0.434343434343
[[  0.  44.   0.]
 [  0.  43.   0.]
 [  0.  13.   0.]]

--------------------------------------------------
Iteration 8
465/465 [==============================] - 0s
score is 0.202951028943
ratio:  0.484848484848
[[  0.  41.   0.]
 [  0.  48.   0.]
 [  0.  11.   0.]]

--------------------------------------------------
Iteration 9
465/465 [==============================] - 0s
score is 0.202842697501
ratio:  0.474747474747
[[  0.  39.   0.]
 [  0.  47.   0.]
 [  0.  14.   0.]]

--------------------------------------------------
Iteration 10
465/465 [==============================] - 0s
score is 0.202847316861
ratio:  0.383838383838
[[  0.  45.   0.]
 [  0.  38.   0.]
 [  0.  17.   0.]]
('Using ratio_select ', '10')
('Using ticker', 'DXPE')
../../cutting_board/ticker_data/ticker_data_DXPE.csv
../../cutting_board/features/ticker_data_DXPE_.csv
<type 'list'>
4653
<type 'list'>
8
<type 'float'>
4.0
<type 'numpy.ndarray'>
4653
(4653, 8)
[[  4.     4.25   4.   ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 ..., 
 [ 21.    21.49  20.57 ...,  22.56  20.65  22.36]
 [ 20.65  22.56  20.65 ...,  24.68  22.55  24.5 ]
 [ 22.55  24.68  22.55 ...,  25.4   24.    25.31]]
('Using ratio_select ', 10)
1.00769410119
0.99573257468
[[ 0.  1.  0.]
 [ 0.  1.  0.]
 [ 0.  0.  1.]
 ..., 
 [ 0.  1.  0.]
 [ 0.  1.  0.]
 [ 1.  0.  0.]]
[ 1548.  1550.  1554.]
Using num_iterations 10
Using internal_nums 20
loading data...
shapes
(4652, 8)
(4652, 3)
X_train.shape
(4187, 8)
y_train.shape
(4187, 3)
X_train.shape[1]
8
Build model...

--------------------------------------------------
Iteration 1
465/465 [==============================] - 0s
score is 0.21548782289
ratio:  0.363636363636
[[  0.   1.  36.]
 [  0.   0.  26.]
 [  0.   1.  36.]]

--------------------------------------------------
Iteration 2
465/465 [==============================] - 0s
score is 0.215758040547
ratio:  0.373737373737
[[  2.   4.  41.]
 [  0.   1.  17.]
 [  1.   0.  34.]]

--------------------------------------------------
Iteration 3
465/465 [==============================] - 0s
score is 0.215421631932
ratio:  0.373737373737
[[  0.   0.  44.]
 [  0.   0.  19.]
 [  0.   0.  37.]]

--------------------------------------------------
Iteration 4
465/465 [==============================] - 0s
score is 0.216107964516
ratio:  0.272727272727
[[  0.   0.  56.]
 [  0.   0.  17.]
 [  0.   0.  27.]]

--------------------------------------------------
Iteration 5
465/465 [==============================] - 0s
score is 0.21524707973
ratio:  0.474747474747
[[  2.   1.  34.]
 [  0.   0.  18.]
 [  0.   0.  45.]]

--------------------------------------------------
Iteration 6
465/465 [==============================] - 0s
score is 0.217388540506
ratio:  0.353535353535
[[  0.   0.  53.]
 [  0.   0.  12.]
 [  0.   0.  35.]]

--------------------------------------------------
Iteration 7
465/465 [==============================] - 0s
score is 0.215807527304
ratio:  0.363636363636
[[  7.   4.  36.]
 [  4.   0.  16.]
 [  3.   1.  29.]]

--------------------------------------------------
Iteration 8
465/465 [==============================] - 0s
score is 0.19400408864
ratio:  0.575757575758
[[ 27.   0.  16.]
 [  9.   0.   7.]
 [ 11.   0.  30.]]

--------------------------------------------------
Iteration 9
465/465 [==============================] - 0s
score is 0.18823286891
ratio:  0.545454545455
[[ 36.   0.   9.]
 [ 23.   0.   6.]
 [  8.   0.  18.]]

--------------------------------------------------
Iteration 10
465/465 [==============================] - 0s
score is 0.184978336096
ratio:  0.575757575758
[[ 30.   0.   8.]
 [ 12.   0.   8.]
 [ 15.   0.  27.]]
('Using ratio_select ', '11')
('Using ticker', 'DXPE')
../../cutting_board/ticker_data/ticker_data_DXPE.csv
../../cutting_board/features/ticker_data_DXPE_.csv
<type 'list'>
4653
<type 'list'>
8
<type 'float'>
4.0
<type 'numpy.ndarray'>
4653
(4653, 8)
[[  4.     4.25   4.   ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 ..., 
 [ 21.    21.49  20.57 ...,  22.56  20.65  22.36]
 [ 20.65  22.56  20.65 ...,  24.68  22.55  24.5 ]
 [ 22.55  24.68  22.55 ...,  25.4   24.    25.31]]
('Using ratio_select ', 11)
0.998972778634
0.977065487704
[[ 0.  0.  1.]
 [ 0.  0.  1.]
 [ 0.  0.  1.]
 ..., 
 [ 0.  0.  1.]
 [ 0.  0.  1.]
 [ 1.  0.  0.]]
[ 1548.  1550.  1554.]
Using num_iterations 10
Using internal_nums 20
loading data...
shapes
(4652, 8)
(4652, 3)
X_train.shape
(4187, 8)
y_train.shape
(4187, 3)
X_train.shape[1]
8
Build model...

--------------------------------------------------
Iteration 1
465/465 [==============================] - 0s
score is 0.200989946723
ratio:  0.373737373737
[[  0.  46.   0.]
 [  0.  37.   0.]
 [  0.  17.   0.]]

--------------------------------------------------
Iteration 2
465/465 [==============================] - 0s
score is 0.200223565102
ratio:  0.494949494949
[[  0.  39.   0.]
 [  0.  49.   0.]
 [  0.  12.   0.]]

--------------------------------------------------
Iteration 3
465/465 [==============================] - 0s
score is 0.200142741203
ratio:  0.424242424242
[[  0.  44.   0.]
 [  0.  42.   0.]
 [  0.  14.   0.]]

--------------------------------------------------
Iteration 4
465/465 [==============================] - 0s
score is 0.19992390275
ratio:  0.343434343434
[[  0.  48.   0.]
 [  0.  34.   0.]
 [  0.  18.   0.]]

--------------------------------------------------
Iteration 5
465/465 [==============================] - 0s
score is 0.20024125278
ratio:  0.444444444444
[[  0.  40.   0.]
 [  0.  44.   0.]
 [  0.  16.   0.]]

--------------------------------------------------
Iteration 6
465/465 [==============================] - 0s
score is 0.200154364109
ratio:  0.464646464646
[[  0.  43.   0.]
 [  0.  46.   0.]
 [  0.  11.   0.]]

--------------------------------------------------
Iteration 7
465/465 [==============================] - 0s
score is 0.200169861317
ratio:  0.484848484848
[[  0.  43.   0.]
 [  0.  48.   0.]
 [  0.   9.   0.]]

--------------------------------------------------
Iteration 8
465/465 [==============================] - 0s
score is 0.200241565704
ratio:  0.414141414141
[[  0.  50.   0.]
 [  0.  41.   0.]
 [  0.   9.   0.]]

--------------------------------------------------
Iteration 9
465/465 [==============================] - 0s
score is 0.200136095285
ratio:  0.474747474747
[[  0.  43.   0.]
 [  0.  47.   0.]
 [  0.  10.   0.]]

--------------------------------------------------
Iteration 10
465/465 [==============================] - 0s
score is 0.200075387955
ratio:  0.40404040404
[[  0.  49.   0.]
 [  0.  40.   0.]
 [  0.  11.   0.]]
('Using ratio_select ', '12')
('Using ticker', 'DXPE')
../../cutting_board/ticker_data/ticker_data_DXPE.csv
../../cutting_board/features/ticker_data_DXPE_.csv
<type 'list'>
4653
<type 'list'>
8
<type 'float'>
4.0
<type 'numpy.ndarray'>
4653
(4653, 8)
[[  4.     4.25   4.   ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 ..., 
 [ 21.    21.49  20.57 ...,  22.56  20.65  22.36]
 [ 20.65  22.56  20.65 ...,  24.68  22.55  24.5 ]
 [ 22.55  24.68  22.55 ...,  25.4   24.    25.31]]
('Using ratio_select ', 12)
1.01033808326
0.990237099024
[[ 0.  1.  0.]
 [ 0.  1.  0.]
 [ 0.  0.  1.]
 ..., 
 [ 0.  1.  0.]
 [ 0.  1.  0.]
 [ 1.  0.  0.]]
[ 1548.  1550.  1554.]
Using num_iterations 10
Using internal_nums 20
loading data...
shapes
(4652, 8)
(4652, 3)
X_train.shape
(4187, 8)
y_train.shape
(4187, 3)
X_train.shape[1]
8
Build model...

--------------------------------------------------
Iteration 1
465/465 [==============================] - 0s
score is 0.216067805886
ratio:  0.343434343434
[[  3.  13.  28.]
 [  3.   2.  22.]
 [  0.   0.  29.]]

--------------------------------------------------
Iteration 2
465/465 [==============================] - 0s
score is 0.215736359358
ratio:  0.363636363636
[[  3.  11.  26.]
 [  1.   1.  21.]
 [  5.   0.  32.]]

--------------------------------------------------
Iteration 3
465/465 [==============================] - 0s
score is 0.215867832303
ratio:  0.393939393939
[[  3.   4.  35.]
 [  1.   3.  15.]
 [  0.   6.  33.]]

--------------------------------------------------
Iteration 4
465/465 [==============================] - 0s
score is 0.216313883662
ratio:  0.414141414141
[[  2.   2.  38.]
 [  1.   1.  17.]
 [  1.   0.  38.]]

--------------------------------------------------
Iteration 5
465/465 [==============================] - 0s
score is 0.216488495469
ratio:  0.414141414141
[[  0.   2.  37.]
 [  0.   1.  20.]
 [  0.   0.  40.]]

--------------------------------------------------
Iteration 6
465/465 [==============================] - 0s
score is 0.217046648264
ratio:  0.313131313131
[[  0.   0.  42.]
 [  1.   0.  26.]
 [  0.   0.  31.]]

--------------------------------------------------
Iteration 7
465/465 [==============================] - 0s
score is 0.216665327549
ratio:  0.454545454545
[[  5.   1.  28.]
 [  0.   1.  25.]
 [  0.   1.  39.]]

--------------------------------------------------
Iteration 8
465/465 [==============================] - 0s
score is 0.216578528285
ratio:  0.363636363636
[[  1.   0.  41.]
 [  2.   0.  20.]
 [  1.   0.  35.]]

--------------------------------------------------
Iteration 9
465/465 [==============================] - 0s
score is 0.21287471056
ratio:  0.434343434343
[[ 13.   3.  21.]
 [ 11.   2.  16.]
 [  4.   2.  28.]]

--------------------------------------------------
Iteration 10
465/465 [==============================] - 0s
score is 0.212183266878
ratio:  0.464646464646
[[ 19.   0.  24.]
 [  9.   0.   8.]
 [ 13.   0.  27.]]
('Using ratio_select ', '13')
('Using ticker', 'DXPE')
../../cutting_board/ticker_data/ticker_data_DXPE.csv
../../cutting_board/features/ticker_data_DXPE_.csv
<type 'list'>
4653
<type 'list'>
8
<type 'float'>
4.0
<type 'numpy.ndarray'>
4653
(4653, 8)
[[  4.     4.25   4.   ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 ..., 
 [ 21.    21.49  20.57 ...,  22.56  20.65  22.36]
 [ 20.65  22.56  20.65 ...,  24.68  22.55  24.5 ]
 [ 22.55  24.68  22.55 ...,  25.4   24.    25.31]]
('Using ratio_select ', 13)
1.0
0.9725
[[ 0.  1.  0.]
 [ 0.  1.  0.]
 [ 0.  0.  1.]
 ..., 
 [ 0.  1.  0.]
 [ 0.  1.  0.]
 [ 1.  0.  0.]]
[ 1548.  2048.  1056.]
Using num_iterations 10
Using internal_nums 20
loading data...
shapes
(4652, 8)
(4652, 3)
X_train.shape
(4187, 8)
y_train.shape
(4187, 3)
X_train.shape[1]
8
Build model...

--------------------------------------------------
Iteration 1
465/465 [==============================] - 0s
score is 0.215689003468
ratio:  0.484848484848
[[ 41.  10.   0.]
 [ 21.   7.   0.]
 [ 13.   8.   0.]]

--------------------------------------------------
Iteration 2
465/465 [==============================] - 0s
score is 0.210490301251
ratio:  0.474747474747
[[ 21.  26.   0.]
 [  5.  26.   0.]
 [  5.  17.   0.]]

--------------------------------------------------
Iteration 3
465/465 [==============================] - 0s
score is 0.209799647331
ratio:  0.414141414141
[[ 28.  28.   0.]
 [  6.  13.   0.]
 [  4.  21.   0.]]

--------------------------------------------------
Iteration 4
465/465 [==============================] - 0s
score is 0.201010584831
ratio:  0.494949494949
[[ 34.  15.   0.]
 [ 15.  15.   0.]
 [  7.  14.   0.]]

--------------------------------------------------
Iteration 5
465/465 [==============================] - 0s
score is 0.201521500945
ratio:  0.575757575758
[[ 35.  12.   0.]
 [ 12.  22.   0.]
 [ 12.   7.   0.]]

--------------------------------------------------
Iteration 6
465/465 [==============================] - 0s
score is 0.200549930334
ratio:  0.505050505051
[[ 28.  12.   0.]
 [ 11.  22.   0.]
 [ 11.  16.   0.]]

--------------------------------------------------
Iteration 7
465/465 [==============================] - 0s
score is 0.200658977032
ratio:  0.484848484848
[[ 31.  20.   0.]
 [  4.  17.   0.]
 [  7.  21.   0.]]

--------------------------------------------------
Iteration 8
465/465 [==============================] - 0s
score is 0.198500007391
ratio:  0.525252525253
[[ 30.  17.   0.]
 [  8.  22.   0.]
 [ 10.  13.   0.]]

--------------------------------------------------
Iteration 9
465/465 [==============================] - 0s
score is 0.197659477592
ratio:  0.565656565657
[[ 31.  18.   0.]
 [  8.  25.   0.]
 [  7.  11.   0.]]

--------------------------------------------------
Iteration 10
465/465 [==============================] - 0s
score is 0.19908387959
ratio:  0.525252525253
[[ 26.  22.   0.]
 [  8.  26.   0.]
 [  5.  13.   0.]]
('Using ratio_select ', '14')
('Using ticker', 'DXPE')
../../cutting_board/ticker_data/ticker_data_DXPE.csv
../../cutting_board/features/ticker_data_DXPE_.csv
<type 'list'>
4653
<type 'list'>
8
<type 'float'>
4.0
<type 'numpy.ndarray'>
4653
(4653, 8)
[[  4.     4.25   4.   ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 ..., 
 [ 21.    21.49  20.57 ...,  22.56  20.65  22.36]
 [ 20.65  22.56  20.65 ...,  24.68  22.55  24.5 ]
 [ 22.55  24.68  22.55 ...,  25.4   24.    25.31]]
('Using ratio_select ', 14)
1.03018268467
1.0
[[ 0.  1.  0.]
 [ 0.  1.  0.]
 [ 0.  0.  1.]
 ..., 
 [ 0.  1.  0.]
 [ 0.  1.  0.]
 [ 1.  0.  0.]]
[  968.  2130.  1554.]
Using num_iterations 10
Using internal_nums 20
loading data...
shapes
(4652, 8)
(4652, 3)
X_train.shape
(4187, 8)
y_train.shape
(4187, 3)
X_train.shape[1]
8
Build model...

--------------------------------------------------
Iteration 1
465/465 [==============================] - 0s
score is 0.205698251724
ratio:  0.444444444444
[[  0.  13.   9.]
 [  0.  19.  18.]
 [  0.  16.  25.]]

--------------------------------------------------
Iteration 2
465/465 [==============================] - 0s
score is 0.205405920744
ratio:  0.555555555556
[[  0.  21.   7.]
 [  0.  38.   6.]
 [  0.  11.  17.]]

--------------------------------------------------
Iteration 3
465/465 [==============================] - 0s
score is 0.204615622759
ratio:  0.474747474747
[[  0.  17.  11.]
 [  0.  24.  11.]
 [  0.  14.  23.]]

--------------------------------------------------
Iteration 4
465/465 [==============================] - 0s
score is 0.204633831978
ratio:  0.555555555556
[[  0.   7.  14.]
 [  0.  26.  16.]
 [  0.   8.  29.]]

--------------------------------------------------
Iteration 5
465/465 [==============================] - 0s
score is 0.204478010535
ratio:  0.575757575758
[[  0.  19.   8.]
 [  0.  27.  10.]
 [  0.   6.  30.]]

--------------------------------------------------
Iteration 6
465/465 [==============================] - 0s
score is 0.205118969083
ratio:  0.494949494949
[[  0.  24.   5.]
 [  0.  24.   9.]
 [  0.  13.  25.]]

--------------------------------------------------
Iteration 7
465/465 [==============================] - 0s
score is 0.202999085188
ratio:  0.535353535354
[[  0.  16.   6.]
 [  0.  32.   7.]
 [  0.  18.  21.]]

--------------------------------------------------
Iteration 8
465/465 [==============================] - 0s
score is 0.201826334
ratio:  0.525252525253
[[  0.  22.   5.]
 [  0.  21.  10.]
 [  0.  11.  31.]]

--------------------------------------------------
Iteration 9
465/465 [==============================] - 0s
score is 0.200705200434
ratio:  0.525252525253
[[  0.  18.   7.]
 [  0.  22.   9.]
 [  0.  14.  30.]]

--------------------------------------------------
Iteration 10
465/465 [==============================] - 0s
score is 0.200724050403
ratio:  0.464646464646
[[  0.  19.   8.]
 [  0.  14.  12.]
 [  0.  15.  32.]]
('Using ratio_select ', '15')
('Using ticker', 'DXPE')
../../cutting_board/ticker_data/ticker_data_DXPE.csv
../../cutting_board/features/ticker_data_DXPE_.csv
<type 'list'>
4653
<type 'list'>
8
<type 'float'>
4.0
<type 'numpy.ndarray'>
4653
(4653, 8)
[[  4.     4.25   4.   ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 [  4.25   4.25   4.25 ...,   4.25   4.25   4.25]
 ..., 
 [ 21.    21.49  20.57 ...,  22.56  20.65  22.36]
 [ 20.65  22.56  20.65 ...,  24.68  22.55  24.5 ]
 [ 22.55  24.68  22.55 ...,  25.4   24.    25.31]]
('Using ratio_select ', 15)
1.00649350649
0.993955512573
[[ 0.  1.  0.]
 [ 0.  1.  0.]
 [ 0.  0.  1.]
 ..., 
 [ 0.  1.  0.]
 [ 0.  1.  0.]
 [ 1.  0.  0.]]
[ 1548.  1550.  1554.]
Using num_iterations 10
Using internal_nums 20
loading data...
shapes
(4652, 8)
(4652, 3)
X_train.shape
(4187, 8)
y_train.shape
(4187, 3)
X_train.shape[1]
8
Build model...

--------------------------------------------------
Iteration 1
465/465 [==============================] - 0s
score is 0.213551476598
ratio:  0.333333333333
[[  0.   0.  46.]
 [  0.   0.  21.]
 [  0.   0.  33.]]

--------------------------------------------------
Iteration 2
465/465 [==============================] - 0s
score is 0.213622763753
ratio:  0.383838383838
[[  0.   0.  41.]
 [  0.   0.  21.]
 [  0.   0.  38.]]

--------------------------------------------------
Iteration 3
465/465 [==============================] - 0s
score is 0.213511884212
ratio:  0.383838383838
[[  0.   0.  42.]
 [  0.   0.  20.]
 [  0.   0.  38.]]

--------------------------------------------------
Iteration 4
465/465 [==============================] - 0s
score is 0.21341714263
ratio:  0.373737373737
[[  0.   0.  46.]
 [  0.   0.  17.]
 [  0.   0.  37.]]

--------------------------------------------------
Iteration 5
465/465 [==============================] - 0s
score is 0.213516831398
ratio:  0.40404040404
[[  0.   0.  38.]
 [  0.   0.  22.]
 [  0.   0.  40.]]

--------------------------------------------------
Iteration 6
465/465 [==============================] - 0s
score is 0.213456943631
ratio:  0.383838383838
[[  0.   0.  44.]
 [  0.   0.  18.]
 [  0.   0.  38.]]

--------------------------------------------------
Iteration 7
465/465 [==============================] - 0s
score is 0.213607043028
ratio:  0.414141414141
[[  0.   0.  40.]
 [  0.   0.  19.]
 [  0.   0.  41.]]

--------------------------------------------------
Iteration 8
465/465 [==============================] - 0s
score is 0.213658586144
ratio:  0.40404040404
[[  0.   0.  42.]
 [  0.   0.  18.]
 [  0.   0.  40.]]

--------------------------------------------------
Iteration 9
465/465 [==============================] - 0s
score is 0.213608756661
ratio:  0.343434343434
[[  0.   0.  43.]
 [  0.   0.  23.]
 [  0.   0.  34.]]

--------------------------------------------------
Iteration 10
465/465 [==============================] - 0s
score is 0.2135938555
ratio:  0.333333333333
[[  0.   0.  43.]
 [  0.   0.  24.]
 [  0.   0.  33.]]

['./feature_build_02.py', '--ticker', 'DXPE', '--ratio_select', '0']

['./noah_05.py', '--iter', '10', '--dims_internal', '20']

['./feature_build_02.py', '--ticker', 'DXPE', '--ratio_select', '1']

['./noah_05.py', '--iter', '10', '--dims_internal', '20']

['./feature_build_02.py', '--ticker', 'DXPE', '--ratio_select', '2']

['./noah_05.py', '--iter', '10', '--dims_internal', '20']

['./feature_build_02.py', '--ticker', 'DXPE', '--ratio_select', '3']

['./noah_05.py', '--iter', '10', '--dims_internal', '20']

['./feature_build_02.py', '--ticker', 'DXPE', '--ratio_select', '4']

['./noah_05.py', '--iter', '10', '--dims_internal', '20']

['./feature_build_02.py', '--ticker', 'DXPE', '--ratio_select', '5']

['./noah_05.py', '--iter', '10', '--dims_internal', '20']

['./feature_build_02.py', '--ticker', 'DXPE', '--ratio_select', '6']

['./noah_05.py', '--iter', '10', '--dims_internal', '20']

['./feature_build_02.py', '--ticker', 'DXPE', '--ratio_select', '7']

['./noah_05.py', '--iter', '10', '--dims_internal', '20']

['./feature_build_02.py', '--ticker', 'DXPE', '--ratio_select', '8']

['./noah_05.py', '--iter', '10', '--dims_internal', '20']

['./feature_build_02.py', '--ticker', 'DXPE', '--ratio_select', '9']

['./noah_05.py', '--iter', '10', '--dims_internal', '20']

['./feature_build_02.py', '--ticker', 'DXPE', '--ratio_select', '10']

['./noah_05.py', '--iter', '10', '--dims_internal', '20']

['./feature_build_02.py', '--ticker', 'DXPE', '--ratio_select', '11']

['./noah_05.py', '--iter', '10', '--dims_internal', '20']

['./feature_build_02.py', '--ticker', 'DXPE', '--ratio_select', '12']

['./noah_05.py', '--iter', '10', '--dims_internal', '20']

['./feature_build_02.py', '--ticker', 'DXPE', '--ratio_select', '13']

['./noah_05.py', '--iter', '10', '--dims_internal', '20']

['./feature_build_02.py', '--ticker', 'DXPE', '--ratio_select', '14']

['./noah_05.py', '--iter', '10', '--dims_internal', '20']

['./feature_build_02.py', '--ticker', 'DXPE', '--ratio_select', '15']

['./noah_05.py', '--iter', '10', '--dims_internal', '20']
